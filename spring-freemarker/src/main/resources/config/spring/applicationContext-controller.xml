<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">


    <context:property-placeholder location="classpath:properties/app.properties" />
    <!--<mvc:annotation-driven/>-->
    <!-- 扫描controller（controller层注入） -->
    <context:component-scan base-package="com.destiny.cat.web"/>

    <!--控制器基于注解-->
    <mvc:annotation-driven>
        <!--
            支持url中带.的变量 或者
            @RequestMapping(value = "/{q:.+}", method = RequestMethod.GET)
        -->
        <mvc:path-matching registered-suffixes-only="true"/>
    </mvc:annotation-driven>


    <!--  转换器 -->
    <bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
        <property name="converters">
            <list>
                <bean class="com.destiny.cat.web.converter.StringConverter"/>
            </list>
        </property>
    </bean>

    <!-- 拦截器 -->
    <!-- 处理请求返回json字符串的乱码问题 -->
    <mvc:annotation-driven>
        <mvc:message-converters>
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <value>application/json;charset=UTF-8</value>
                    </list>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>


    <!-- 配置freeMarker模板加载地址 -->
    <bean id="freemarkerConfig" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
        <!-- 视图解析器会在/WEB-INF/ftl/路径下扫描视图文件 -->
        <property name="templateLoaderPath" value="WEB-INF/templates/"/>
        <property name="defaultEncoding" value="UTF-8"/>
        <property name="freemarkerSettings">
            <props>
                <prop key="template_update_delay">0</prop>
                <prop key="url_escaping_charset">UTF-8</prop>
                <prop key="locale">UTF-8</prop>
                <prop key="datetime_format">yyyy-MM-dd HH:mm:ss</prop>
                <prop key="date_format">yyyy-MM-dd</prop>
                <prop key="number_format">#.##</prop>
                <prop key="classic_compatible">true</prop>
                <prop key="template_exception_handler">ignore</prop>
            </props>
        </property>
        <property name="freemarkerVariables">
            <map>
                <entry key="basicPath" value="#{servletContext.contextPath}"/>
                <entry key="IncPath" value="localhost:9098"/>
                <entry key="xml_escape" value-ref="fmXmlEscape"/>
            </map>
        </property>
    </bean>

    <bean id="fmXmlEscape" class="freemarker.template.utility.XmlEscape"/>

    <!-- 配置freeMarker视图解析器 -->
    <bean id="freeMarkerViewResolver"
          class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.freemarker.FreeMarkerView"/>
        <!-- 扫描路径內所有以ftl结尾的文件 -->
        <!--<property name="viewNames">
            <array>
                <value>*.ftl</value>
            </array>
        </property>-->
        <property name="suffix" value=".ftl"/>
        <property name="contentType" value="text/html;charset=UTF-8"/>
        <property name="cache" value="false"/>
        <property name="order" value="0"/>
        <property name="exposeRequestAttributes" value="true"/>
        <property name="exposeSessionAttributes" value="true"/>
        <property name="exposeSpringMacroHelpers" value="true"/>
        <property name="requestContextAttribute" value="request"/>
        <!-- 给视图解析器配置优先级 -->
    </bean>


    <!--文件上传解析器-->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="100000000000"/>
        <property name="maxInMemorySize" value="40960000"/>
    </bean>

    <!-- 配置哪些是静态资源，缺省Servlet 直接返回 -->
    <mvc:resources mapping="/static/**" location="/static/" cache-period="31556926">
        <mvc:cache-control max-age="3600" cache-public="true"/>
    </mvc:resources>
    <mvc:resources mapping="/upload/**" location="/upload/" cache-period="31556926"/>

    <!-- redis session -->

    <!--  redis session 配置 web.xml 中做配置   -->
    <bean id="redisHttpSessionConfiguration"
          class="org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration">
        <!-- session 存活时间 -->
        <property name="maxInactiveIntervalInSeconds" value="3600"/>
        <!-- redis 命名空间-->
          <property name="redisNamespace" value="victory.spring.session"/>
    </bean>

    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxTotal" value="100" />
        <property name="maxIdle" value="10" />
    </bean>

    <bean id="jedisConnectionFactory"
          class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory" destroy-method="destroy">
        <property name="hostName" value="${redis.host}"/>
        <property name="port" value="${redis.port}"/>
        <property name="password" value="${redis.auth}" />
        <property name="timeout" value="3000"/>
        <property name="database" value="${redis.database}"/>
        <property name="usePool" value="true"/>
        <property name="poolConfig" ref="jedisPoolConfig"/>
    </bean>


</beans>
