# 数据库分库分表策略
# 打开 sql 日志输出
spring.shardingsphere.props.sql.show=true
spring.shardingsphere.datasource.names=m1,m2

# m1 数据源
spring.shardingsphere.datasource.m1.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.m1.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.m1.url=jdbc:mysql://localhost:3306/test_001?useUnicode=true&characterEncoding=utf8&useSSL=false&tinyInt1isBit=true&serverTimezone=Asia/Shanghai&allowMultiQueries=true&rewriteBatchedStatements=true
spring.shardingsphere.datasource.m1.username=root
spring.shardingsphere.datasource.m1.password=Myroot123!

# m2 数据源
spring.shardingsphere.datasource.m2.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.m2.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.m2.url=jdbc:mysql://localhost:3306/test_002?useUnicode=true&characterEncoding=utf8&useSSL=false&tinyInt1isBit=true&serverTimezone=Asia/Shanghai&allowMultiQueries=true&rewriteBatchedStatements=true
spring.shardingsphere.datasource.m2.username=root
spring.shardingsphere.datasource.m2.password=Myroot123!

# 真实的数据库表
spring.shardingsphere.sharding.tables.t_goods.actual-data-nodes=m$->{1..2}.t_goods_$->{1..3}
# 指定表的主键生成策略、id生成策略、雪花算法的 worker id
spring.shardingsphere.sharding.tables.t_goods.key-generator.column=id
spring.shardingsphere.sharding.tables.t_goods.key-generator.type=SNOWFLAKE
spring.shardingsphere.sharding.tables.t_goods.key-generator.props.worker.id=1

# 分片策略有 inline standard complex hint 强制路由策略
# 广播表

# 选定计算的字段 id、根据计算的字段算出对应的表名
spring.shardingsphere.sharding.tables.t_goods.table-strategy.inline.sharding-column=id
# {((id+1)%6).intdiv(3)}
spring.shardingsphere.sharding.tables.t_goods.table-strategy.inline.algorithm-expression=t_goods_$->{id%3+1}

# 分库的策略
spring.shardingsphere.sharding.tables.t_goods.database-strategy.inline.sharding-column=id
spring.shardingsphere.sharding.tables.t_goods.database-strategy.inline.algorithm-expression=m$->{id%2+1}
